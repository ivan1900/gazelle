generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model account {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(100)
  email      String     @unique(map: "user_email_unique") @db.VarChar(100)
  password   String?    @db.VarChar(100)
  google_id  String?    @db.VarChar(100)
  created_at DateTime?  @default(now()) @db.DateTime(0)
  updated_at DateTime?  @db.DateTime(0)
  meta       Json?
  deleted_at DateTime?  @db.DateTime(0)
  activity   activity[]	
}

model action_time {
  id          Int       @id @default(autoincrement())
  activity_id Int 
  start       DateTime? @db.DateTime(0)
  end         DateTime? @db.DateTime(0)
  activity    activity? @relation(fields: [activity_id], references: [id])

  @@index([activity_id])
}

model activity {
  id               Int           @id @default(autoincrement())
  name             String        @unique(map: "activity_pk_2") @db.VarChar(100)
  description      String?       @db.VarChar(255)
  status           String        @db.VarChar(20)
  account_id       Int 
  activity_type_id Int
  created_at       DateTime?     @default(now()) @db.DateTime(0)
  updated_at       DateTime?     @db.DateTime(0)
  action_time      action_time[]
  user             account?         @relation(fields: [account_id], references: [id])

  @@index([account_id, name], map: "activity_account_id_name_IDX")
}

model activity_type {
  id            Int       @id @default(autoincrement())
  account_id    Int 
  name          String    @db.VarChar(60)
  is_productive Boolean   @default(false)
  color         String?   @db.VarChar(8)
  deleted_at    DateTime? @db.DateTime(0)

  @@unique([account_id, name], map: "activity_type_account_id_IDX")
}
